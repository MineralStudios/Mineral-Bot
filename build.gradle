plugins {
    id 'java'
    id 'maven-publish'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    repositories {
        mavenCentral()
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    compileJava {
        sourceCompatibility = '17'
        targetCompatibility = '17'
        options.compilerArgs += ['-parameters']
    }

    group = "gg.mineral"
    version = new Date().format('yyyyMMdd')

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifactId = project.name
                version = new Date().format("yyyyMMdd-HH.mm.ss")
            }
        }

        repositories {
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/MineralStudios/Mineral-Bot")
                credentials {
                    username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                    password = project.findProperty("gpr.token") ?: System.getenv("TOKEN")
                }
            }
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    afterEvaluate { subproject ->
        def finalJarTask = subproject.tasks.findByName("shadowJar") ?: subproject.tasks.findByName("jar")

        if (finalJarTask != null) {
            publishing {
                publications {
                    maven(MavenPublication) {
                        artifact finalJarTask.archiveFile.get() 
                        artifactId = subproject.name 
                    }
                }

                repositories {
                    maven {
                        name = "GitHubPackages"
                        url = uri("https://maven.pkg.github.com/MineralStudios/Mineral-Bot")
                        credentials {
                            username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                            password = project.findProperty("gpr.token") ?: System.getenv("TOKEN")
                        }
                    }
                }
            }

            subproject.tasks.named('publish').configure {
                dependsOn(finalJarTask)
            }
        }
    }
}
