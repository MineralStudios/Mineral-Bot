
repositories {
    maven {
        url 'https://libraries.minecraft.net/'
    }
}

dependencies {
    compileOnly project(':bot-api')
    implementation project(':bot-shared-library')
    implementation project(':bot-intelligence')
    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'
    compileOnly 'io.netty:netty-all:4.1.115.Final'
    compileOnly 'it.unimi.dsi:fastutil:8.5.15'
    compileOnly 'org.apache.logging.log4j:log4j-api:2.24.3'
    compileOnly 'org.apache.logging.log4j:log4j-core:2.24.3'
    implementation 'net.java.dev.jna:jna:5.15.0'
    implementation 'net.java.dev.jna:jna-platform:5.16.0'
    implementation 'com.ibm.icu:icu4j:76.1'
    implementation 'net.sf.jopt-simple:jopt-simple:5.0.4'
    implementation 'com.paulscode:codecjorbis:20101023'
    implementation 'com.paulscode:codecwav:20101023'
    implementation 'com.paulscode:libraryjavasound:20101123'
    implementation 'com.paulscode:librarylwjglopenal:20100824'
    implementation 'com.paulscode:soundsystem:20120107'
    implementation 'com.google.guava:guava:33.4.0-jre'
    implementation 'org.apache.commons:commons-lang3:3.17.0'
    implementation 'commons-io:commons-io:2.18.0'
    implementation 'com.google.code.gson:gson:2.11.0'
    implementation 'org.lwjgl.lwjgl:lwjgl:2.9.3'
    implementation 'org.lwjgl.lwjgl:lwjgl_util:2.9.3'
    implementation 'com.mojang:authlib:1.5.21'
    implementation 'javax.vecmath:vecmath:1.5.2'
}

sourceSets {
    main.java.srcDirs += 'src/main/mc-client'
    main.resources.srcDirs += 'src/main/mc-resources'
}

jar {
    manifest {
        attributes 'Multi-Release': 'true'
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

apply plugin: 'application'

mainClassName = 'gg.mineral.bot.base.client.StandaloneLauncher'

task runMinecraftClient {
    doLast {
        def tempDir = System.getProperty("java.io.tmpdir")
        def minecraftDir = new File(tempDir, "minecraft_temp")

        // Ensure the directory exists
        if (!minecraftDir.exists()) {
            if (minecraftDir.mkdirs()) {
                println "Created temporary Minecraft directory at ${minecraftDir.absolutePath}"
            } else {
                throw new RuntimeException("Failed to create temporary Minecraft directory")
            }
        }

        def nativesDir = new File(projectDir, "natives")

        javaexec {
            main = mainClassName
            classpath = sourceSets.main.runtimeClasspath
            jvmArgs = ['-Djava.library.path=' + nativesDir.absolutePath]
        }
    }
}

runMinecraftClient.dependsOn build
